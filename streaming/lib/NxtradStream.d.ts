import { CallBackFunction, ConnCallBackFunction } from "./types";
export default class NxtradStream {
    private host;
    private path;
    private version;
    private authToken;
    private streamCb;
    private connCb;
    private isConsolidated;
    private connected;
    private connection;
    private enableSymStore;
    private symbolStore?;
    private l1CacheList;
    private l1List;
    private l1OptionsList;
    constructor(host: string, connCb: ConnCallBackFunction, streamCb: CallBackFunction, symStore?: boolean);
    connect(token: string): Promise<void>;
    reconnect(): Promise<void>;
    private tryConnect;
    private loadSymbolStore;
    private onOpen;
    private onClose;
    private onMessage;
    private onError;
    private onMessageRecv;
    private processDecomData;
    private sendReq;
    private sendSubReq;
    private sendUnSubRequest;
    private onParseComplete;
    isConnected(): boolean;
    subscribeL1(tokens: string[]): boolean;
    subscribeL1Snapshot(tokens: string[]): boolean;
    subscribeL2(tokens: string[]): boolean;
    subscribeL2Snapshot(tokens: string[]): boolean;
    sendPing(): boolean;
    subscribeGreeks(tokens: string[]): boolean;
    subscribeGreeksSnapShot(tokens: string[]): boolean;
    subscribeOptionChain(undId: string, expiry: string): boolean;
    subscribeOHLC(tokens: string[], interval: string): boolean;
    subscribeEvents(events: string[]): boolean;
    unsubscribeOptionChain(undId: string, expiry: string): boolean;
    unSubscribeEvents(): boolean;
    unSubscribeL1(): boolean;
    unSubscribeL2(): boolean;
    unSubscribeGreeks(): boolean;
    unSubscribeOHLC(): boolean;
    disconnect(): void;
}
